// Generated by BUCKLESCRIPT VERSION 4.0.7000, PLEASE EDIT WITH CARE
'use strict';

var Sys = require("bsb-native/lib/js/sys.js");
var $$Array = require("bsb-native/lib/js/array.js");
var $$String = require("bsb-native/lib/js/string.js");
var Pervasives = require("bsb-native/lib/js/pervasives.js");
var Caml_string = require("bsb-native/lib/js/caml_string.js");
var Caml_builtin_exceptions = require("bsb-native/lib/js/caml_builtin_exceptions.js");

var args = $$Array.sub(Sys.argv, 1, Sys.argv.length - 1 | 0);

function isVowel(character) {
  switch (character) {
    case 98 : 
    case 99 : 
    case 100 : 
    case 102 : 
    case 103 : 
    case 104 : 
    case 106 : 
    case 107 : 
    case 108 : 
    case 109 : 
    case 110 : 
    case 112 : 
    case 113 : 
    case 114 : 
    case 115 : 
    case 116 : 
    case 118 : 
    case 119 : 
    case 120 : 
        return false;
    case 97 : 
    case 101 : 
    case 105 : 
    case 111 : 
    case 117 : 
    case 121 : 
        return true;
    default:
      return false;
  }
}

function fileText(fileName) {
  var lines = "";
  var openChannel = Pervasives.open_in(fileName);
  var $$break = false;
  while(!$$break) {
    var result;
    try {
      result = Pervasives.input_line(openChannel);
    }
    catch (exn){
      if (exn === Caml_builtin_exceptions.end_of_file) {
        result = "";
      } else {
        throw exn;
      }
    }
    if (result.length < 1) {
      $$break = true;
    }
    lines = lines + result;
  };
  Pervasives.close_in(openChannel);
  return lines;
}

function trimFileName(name) {
  var match = $$String.contains_from(name, name.length, /* "/" */47);
  if (match) {
    return $$String.sub(name, 0, name.length - 1 | 0);
  } else {
    return name;
  }
}

function vowelToNumber(charString) {
  var match = charString.length !== 0;
  var vowel = match ? isVowel(Caml_string.get(charString, 0)) : false;
  if (vowel) {
    return 1;
  } else {
    return 0;
  }
}

exports.args = args;
exports.isVowel = isVowel;
exports.fileText = fileText;
exports.trimFileName = trimFileName;
exports.vowelToNumber = vowelToNumber;
/* args Not a pure module */
